Week 1:
- Pitched the virtual queue system management idea to the team.
- The team discussed the project request form to get approved
- Rust 101 workshop

Week 2:
- The team wrote the proposal draft and got feedback from the tutor
- We also split and wrote user stories on Jira. 

Week 3:
- Did some figma
- The team finalised the proposal and submitted
- Set up dev environment

Week 4:
- Frontend for queue creation (skeleton).
- POST request to create queue and backend for queue creation.
- Assited request creation through pair programming. 

Week 5:
- FAQs Frontend using data grid
- FAQs backend (create and read)

Week 6:
- FAQs Backend (update and delete operations)
- Chat frontend:
    - request page (tutor's)
    - waiting screen (student's)

Week 7:
- Chat integration with backend sockets
- Pushing queue updates through sockets
- Notis for queue updates:
    - announcement toast on FE
    - noti with sound when student joining queue on tutor's screen
    
Week 8:
- Demo playtest
- Fixed socket bugs where router is not loaded in time for socket connection

Week 9:
- Cluster creation modal frontend
- Let students assign themselves to a cluster and create a cluster
    - created join and leave cluster route on the backend
    - created students' view of requests in queue with join/leave buttons


Week 10:
- fixed bugs on date/time of edit-queue and remove unnecessary state (isTimeLimit)
- final demo
