Week 1
This week we chose Peter as the scrum master and created the repo, Jira as well as formed groups on
Moodle. We confirmed that we wanted to create a Queue Management System used primarily for the 
purpose of help sessions and then did brainstorming of what possible tech stack we used. We ended the
week debating the idea of using Rust for the backend. Since majority of the group has no previous
experience with Rust, we decided to do a quick crash course on the basics of Rust to see if it was
wise for us to use. 

Week 2
This week, our main aim was to get our custom project approved by our tutor and the lecturer. Due to 
this we had to make many last minute updates in order to ensure that the project was in fact broad
enough for a proper product to be produced. Once approved, our team had a meeting where we finalised 
our objectives, novel features and assigned user stories. The week concluded with us meeting to finalised
all user stories and ensuring that the Jira tickets are accurate and up to date with epics, objectives
and user stories. I focussed on working on Peter with the proposal as well as completing epics for
User History novel feature. 

Week 3
This week my primary focus was to work on the formal proposal due at the end of this week. We worked
on organising our Epics and assigning them to our team so that we can write user stories for them. I wrote
user stories for User History. Then, we worked on the figma -> I made frontend designs for all User
History pages as well as the various Queue Management Screens including Student/Tutor view of the queue,
Tutor view of student requests as well as the student waiting screen.

Week 4
This week the main goal was to get started on Demo A. I was assigned work for User Profile and Create 
Request so I focussed on those two pages. This week - I really only had time to finish User Profile and 
aim to finish the rest of my assigned tasks next week before the end of the first sprint. Also, a 
primary goal of mine in this sprint is to familiarise myself with backend code so that I am able to
easily integrate my frontend and backend components.
